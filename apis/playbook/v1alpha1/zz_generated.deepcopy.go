//go:build !ignore_autogenerated

/*
Copyright 2024 Cloudhippie <info@cloudhippie.de>
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Playbook) DeepCopyInto(out *Playbook) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Playbook.
func (in *Playbook) DeepCopy() *Playbook {
	if in == nil {
		return nil
	}
	out := new(Playbook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Playbook) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookInitParameters) DeepCopyInto(out *PlaybookInitParameters) {
	*out = *in
	if in.AnsiblePlaybookBinary != nil {
		in, out := &in.AnsiblePlaybookBinary, &out.AnsiblePlaybookBinary
		*out = new(string)
		**out = **in
	}
	if in.CheckMode != nil {
		in, out := &in.CheckMode, &out.CheckMode
		*out = new(bool)
		**out = **in
	}
	if in.DiffMode != nil {
		in, out := &in.DiffMode, &out.DiffMode
		*out = new(bool)
		**out = **in
	}
	if in.ExtraVars != nil {
		in, out := &in.ExtraVars, &out.ExtraVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForceHandlers != nil {
		in, out := &in.ForceHandlers, &out.ForceHandlers
		*out = new(bool)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnorePlaybookFailure != nil {
		in, out := &in.IgnorePlaybookFailure, &out.IgnorePlaybookFailure
		*out = new(bool)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Playbook != nil {
		in, out := &in.Playbook, &out.Playbook
		*out = new(string)
		**out = **in
	}
	if in.Replayable != nil {
		in, out := &in.Replayable, &out.Replayable
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VarFiles != nil {
		in, out := &in.VarFiles, &out.VarFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultFiles != nil {
		in, out := &in.VaultFiles, &out.VaultFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	if in.VaultPasswordFile != nil {
		in, out := &in.VaultPasswordFile, &out.VaultPasswordFile
		*out = new(string)
		**out = **in
	}
	if in.Verbosity != nil {
		in, out := &in.Verbosity, &out.Verbosity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookInitParameters.
func (in *PlaybookInitParameters) DeepCopy() *PlaybookInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlaybookInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookList) DeepCopyInto(out *PlaybookList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Playbook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookList.
func (in *PlaybookList) DeepCopy() *PlaybookList {
	if in == nil {
		return nil
	}
	out := new(PlaybookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PlaybookList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookObservation) DeepCopyInto(out *PlaybookObservation) {
	*out = *in
	if in.AnsiblePlaybookBinary != nil {
		in, out := &in.AnsiblePlaybookBinary, &out.AnsiblePlaybookBinary
		*out = new(string)
		**out = **in
	}
	if in.AnsiblePlaybookStderr != nil {
		in, out := &in.AnsiblePlaybookStderr, &out.AnsiblePlaybookStderr
		*out = new(string)
		**out = **in
	}
	if in.AnsiblePlaybookStdout != nil {
		in, out := &in.AnsiblePlaybookStdout, &out.AnsiblePlaybookStdout
		*out = new(string)
		**out = **in
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CheckMode != nil {
		in, out := &in.CheckMode, &out.CheckMode
		*out = new(bool)
		**out = **in
	}
	if in.DiffMode != nil {
		in, out := &in.DiffMode, &out.DiffMode
		*out = new(bool)
		**out = **in
	}
	if in.ExtraVars != nil {
		in, out := &in.ExtraVars, &out.ExtraVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForceHandlers != nil {
		in, out := &in.ForceHandlers, &out.ForceHandlers
		*out = new(bool)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnorePlaybookFailure != nil {
		in, out := &in.IgnorePlaybookFailure, &out.IgnorePlaybookFailure
		*out = new(bool)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Playbook != nil {
		in, out := &in.Playbook, &out.Playbook
		*out = new(string)
		**out = **in
	}
	if in.Replayable != nil {
		in, out := &in.Replayable, &out.Replayable
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TempInventoryFile != nil {
		in, out := &in.TempInventoryFile, &out.TempInventoryFile
		*out = new(string)
		**out = **in
	}
	if in.VarFiles != nil {
		in, out := &in.VarFiles, &out.VarFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultFiles != nil {
		in, out := &in.VaultFiles, &out.VaultFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	if in.VaultPasswordFile != nil {
		in, out := &in.VaultPasswordFile, &out.VaultPasswordFile
		*out = new(string)
		**out = **in
	}
	if in.Verbosity != nil {
		in, out := &in.Verbosity, &out.Verbosity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookObservation.
func (in *PlaybookObservation) DeepCopy() *PlaybookObservation {
	if in == nil {
		return nil
	}
	out := new(PlaybookObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookParameters) DeepCopyInto(out *PlaybookParameters) {
	*out = *in
	if in.AnsiblePlaybookBinary != nil {
		in, out := &in.AnsiblePlaybookBinary, &out.AnsiblePlaybookBinary
		*out = new(string)
		**out = **in
	}
	if in.CheckMode != nil {
		in, out := &in.CheckMode, &out.CheckMode
		*out = new(bool)
		**out = **in
	}
	if in.DiffMode != nil {
		in, out := &in.DiffMode, &out.DiffMode
		*out = new(bool)
		**out = **in
	}
	if in.ExtraVars != nil {
		in, out := &in.ExtraVars, &out.ExtraVars
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ForceHandlers != nil {
		in, out := &in.ForceHandlers, &out.ForceHandlers
		*out = new(bool)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnorePlaybookFailure != nil {
		in, out := &in.IgnorePlaybookFailure, &out.IgnorePlaybookFailure
		*out = new(bool)
		**out = **in
	}
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Playbook != nil {
		in, out := &in.Playbook, &out.Playbook
		*out = new(string)
		**out = **in
	}
	if in.Replayable != nil {
		in, out := &in.Replayable, &out.Replayable
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VarFiles != nil {
		in, out := &in.VarFiles, &out.VarFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultFiles != nil {
		in, out := &in.VaultFiles, &out.VaultFiles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VaultID != nil {
		in, out := &in.VaultID, &out.VaultID
		*out = new(string)
		**out = **in
	}
	if in.VaultPasswordFile != nil {
		in, out := &in.VaultPasswordFile, &out.VaultPasswordFile
		*out = new(string)
		**out = **in
	}
	if in.Verbosity != nil {
		in, out := &in.Verbosity, &out.Verbosity
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookParameters.
func (in *PlaybookParameters) DeepCopy() *PlaybookParameters {
	if in == nil {
		return nil
	}
	out := new(PlaybookParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookSpec) DeepCopyInto(out *PlaybookSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookSpec.
func (in *PlaybookSpec) DeepCopy() *PlaybookSpec {
	if in == nil {
		return nil
	}
	out := new(PlaybookSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlaybookStatus) DeepCopyInto(out *PlaybookStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlaybookStatus.
func (in *PlaybookStatus) DeepCopy() *PlaybookStatus {
	if in == nil {
		return nil
	}
	out := new(PlaybookStatus)
	in.DeepCopyInto(out)
	return out
}
